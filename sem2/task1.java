package sem2;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

/*
üìî –ó–∞–ø–∏—à–∏—Ç–µ –≤ —Ñ–∞–π–ª —Å–ª–µ–¥—É—é—â–∏–µ —Å—Ç—Ä–æ–∫–∏:
–ê–Ω–Ω–∞=4
–ï–ª–µ–Ω–∞=5
–ú–∞—Ä–∏–Ω–∞=6
–í–ª–∞–¥–∏–º–∏—Ä=?
–ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω=?
–ò–≤–∞–Ω=4
–†–µ–∞–ª–∏–∑—É–π—Ç–µ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–∞–π–ª–∞
–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤ –¥–≤—É–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ (–ª–∏–±–æ HashMap, –µ—Å–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç—ã —Å –Ω–∏–º –∑–Ω–∞–∫–æ–º—ã).
–í –æ—Ç–¥–µ–ª—å–Ω–æ–º –º–µ—Ç–æ–¥–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–π—Ç–∏ –ø–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö,
–µ—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ?, –∑–∞–º–µ–Ω–∏—Ç—å –µ–≥–æ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —á–∏—Å–ª–æ.
–ï—Å–ª–∏ –Ω–∞ –∫–∞–∫–æ–º-—Ç–æ –º–µ—Å—Ç–µ –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è —Å–∏–º–≤–æ–ª, –æ—Ç–ª–∏—á–Ω—ã–π –æ—Ç —á–∏—Å–ª–∞ –∏–ª–∏ ?,
–±—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ.–ó–∞–ø–∏—Å–∞—Ç—å –≤ —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª –¥–∞–Ω–Ω—ã–µ —Å –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏ ?.
 */
public class task1 {
    public static void main(String[] args) {
        File file = new File("D:\\Kate\\EDU\\GeekBrains\\lessons\\practice\\Java.Exceptions_GB_progger\\sem2\\names");
        List<String[]> lst = readFile(file);
        changeList(lst);
        writeFile(lst, file);
    }

    public static List<String[]> readFile(File file) {
        List<String[]> list = new ArrayList<>();
        try {
            FileReader reader = new FileReader(file);
            BufferedReader br = new BufferedReader(reader);
            String line;
            while ((line = br.readLine()) != null) {
                list.add(line.split("="));
            }
        } catch (FileNotFoundException e) {
            System.out.println(e.getMessage());
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
        return list;
    }

    public static void changeList(List<String[]> lst) {
        for (String[] el : lst) {
            if (!checkException(el[1]) && !el[1].equals("?")) {
                throw new RuntimeException(el[1]);
            }
            if (el[1].equals("?")) el[1] = String.valueOf(el[0].length());
        }
    }

    public static boolean checkException(String line) {
        try {
            Integer.valueOf(line);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public static void writeFile(List<String[]> lst, File file) {
        try {
            BufferedWriter bw = new BufferedWriter(new FileWriter(file));
            for (String[] el : lst) {
                bw.write(el[0] + "=" + el[1]);
                bw.newLine();
            }
            bw.close();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }
}